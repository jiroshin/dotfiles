[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
	function! NERDTreeHighlightFile(extension, fg, bg, guifg, guibg)
	 exec 'autocmd filetype nerdtree highlight ' . a:extension .' ctermbg='. a:bg .' ctermfg='. a:fg .' guibg='. a:guibg .' guifg='. a:guifg
	 exec 'autocmd filetype nerdtree syn match ' . a:extension .' #^\s\+.*'. a:extension .'$#'
	endfunction
  let NERDTreeShowHidden=1

	nnoremap <silent><C-a> :NERDTreeFind<CR>:vertical res 30<CR>

	call NERDTreeHighlightFile('yml',    'yellow',  'none', 'yellow',  '#151515')
	call NERDTreeHighlightFile('json',   'yellow',  'none', 'yellow',  '#151515')
	call NERDTreeHighlightFile('html',   'yellow',  'none', 'yellow',  '#151515')
	call NERDTreeHighlightFile('css',    'cyan',    'none', 'cyan',    '#151515')
	call NERDTreeHighlightFile('rb',     'Red',     'none', 'red',     '#151515')
	call NERDTreeHighlightFile('js',     'Red',     'none', '#ffa500', '#151515')
'''

# ウィンドウの幅をctr+eで調整
[[plugins]]
repo = 'simeji/winresizer'

# インデントに色付け
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
	let g:indent_guides_enable_on_vim_startup = 1
	let g:indent_guides_auto_colors = 0
	autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=red   ctermbg=238
	autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=green ctermbg=239
'''

# コメントアウト
[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
	vnoremap ? :'<,'>TComment<CR>
'''

# airline
[[plugins]]
repo = 'vim-airline/vim-airline'
[[plugins]]
repo = 'vim-airline/vim-airline-themes'
depends = 'vim-airline'
hook_add = '''
	let g:airline_theme = 'term'
	if !exists('g:airline_symbols')
		let g:airline_symbols = {}
	endif
	let g:airline_left_sep = '»'
	let g:airline_left_sep = '▶'
	let g:airline_right_sep = '«'
	let g:airline_right_sep = '◀'
	let g:airline_symbols.crypt = '🔒'
	let g:airline_symbols.linenr = '☰'
	let g:airline_symbols.linenr = '␊'
	let g:airline_symbols.linenr = '␤'
	let g:airline_symbols.linenr = '¶'
	let g:airline_symbols.maxlinenr = ''
	let g:airline_symbols.maxlinenr = '㏑'
	let g:airline_symbols.branch = '⎇'
	let g:airline_symbols.paste = 'ρ'
	let g:airline_symbols.paste = 'Þ'
	let g:airline_symbols.paste = '∥'
	let g:airline_symbols.spell = 'Ꞩ'
	let g:airline_symbols.notexists = 'Ɇ'
	let g:airline_symbols.whitespace = 'Ξ'
	let g:airline_left_sep = ''
	let g:airline_left_alt_sep = ''
	let g:airline_right_sep = ''
	let g:airline_right_alt_sep = ''
	let g:airline_symbols.branch = ''
	let g:airline_symbols.readonly = ''
	let g:airline_symbols.linenr = '☰'
	let g:airline_symbols.maxlinenr = ''
	let g:airline_left_sep = '⮀'
	let g:airline_left_alt_sep = '⮁'
	let g:airline_right_sep = '⮂'
	let g:airline_right_alt_sep = '⮃'
	let g:airline_symbols.branch = '⭠'
	let g:airline_symbols.readonly = '⭤'
	let g:airline_symbols.linenr = '⭡'
	let g:airline#extensions#tabline#enabled = 1
	let g:airline#extensions#tabline#buffer_idx_mode = 1
	let g:airline#extensions#tabline#fnamemod = ':t'
'''

# gitのHEADとの差分を表示
[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
	set signcolumn=yes
	let g:gitgutter_async = 1
	let g:gitgutter_sign_modified = 'rw'
	highlight GitGutterAdd ctermfg=green
	highlight GitGutterChange ctermfg=yellow
	highlight GitGutterDelete ctermfg=red
	highlight GitGutterChangeDelete ctermfg=yellow
'''

# fzf
[[plugins]]
repo = 'junegunn/fzf'
hook_post_update = './install --all'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
	command! -bang -nargs=* Rg
	\ call fzf#vim#grep(
	\ 'rg --column --line-number --hidden --ignore-case --no-heading --color=always '.shellescape(<q-args>), 1,
	\ <bang>0 ? fzf#vim#with_preview({'options': '--delimiter : --nth 4..'}, 'up:60%')
	\ : fzf#vim#with_preview({'options': '--delimiter : --nth 4..'}, 'right:50%:hidden', '?'),
	\ <bang>0)
	nnoremap <C-g> :Rg<Space>
	nnoremap <C-p> :GFiles<CR>
'''

# 括弧のレインボーハイライト
[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = '''
	let g:rainbow_active = 1
'''

# lsp -----------------------------------------------------
[[plugins]]
repo = 'prabirshrestha/async.vim'
[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
  nnoremap gd :LspDefinition<CR>
  let g:lsp_signs_enaled=0
  let g:lsp_async_completion=0
  let g:lsp_diagnostics_echo_cursor=1
  let g:lsp_highlight_references_enabled=0
  let g:lsp_text_edit_enabled=0
  let g:lsp_virtual_text_enabled=0

	if executable('solargraph')
			" gem install solargraph
			au User lsp_setup call lsp#register_server({
					\ 'name': 'solargraph',
					\ 'cmd': {server_info->[&shell, &shellcmdflag, 'solargraph stdio']},
					\ 'initialization_options': {"diagnostics": "true"},
					\ 'whitelist': ['ruby'],
					\ })
	endif
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
hook_add = '''
  let g:asyncomplete_auto_popup=1
  set completeopt+=preview
  autocmd! CompleteDone * if pumvisible() == 0 | pclose | endif
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
depends = 'asyncomplete.vim'
depends = 'vim-lsp'
merged = 0

[[plugins]]
repo = 'prabirshrestha/asyncomplete-file.vim'
depends = 'asyncomplete.vim'
hook_add = '''
  au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#file#get_source_options({
    \ 'name': 'file',
    \ 'whitelist': ['*'],
    \ 'priority': 10,
    \ 'completor': function('asyncomplete#sources#file#completor')
    \ }))
'''
# ---------------------------------------------------------
